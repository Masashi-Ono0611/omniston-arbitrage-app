// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.2
//   protoc               v5.29.3
// source: omni/v1beta7/types/order.proto

/* eslint-disable */
import { TradeStatus } from "../trader/trade";
import { Address } from "./common";
import { Quote } from "./quote";

export const protobufPackage = "omni.v1beta7";

/** TODO: Design multi-chain data */
export interface OrderData {
  quote: Quote | undefined;
  escrowAddress: Address | undefined;
  escrowItemAddress: Address | undefined;
  status: TradeStatus | undefined;
}

function createBaseOrderData(): OrderData {
  return {
    quote: undefined,
    escrowAddress: undefined,
    escrowItemAddress: undefined,
    status: undefined,
  };
}

export const OrderData = {
  fromJSON(object: any): OrderData {
    return {
      quote: isSet(object.quote) ? Quote.fromJSON(object.quote) : undefined,
      escrowAddress: isSet(object.escrow_address)
        ? Address.fromJSON(object.escrow_address)
        : undefined,
      escrowItemAddress: isSet(object.escrow_item_address)
        ? Address.fromJSON(object.escrow_item_address)
        : undefined,
      status: isSet(object.status)
        ? TradeStatus.fromJSON(object.status)
        : undefined,
    };
  },

  toJSON(message: OrderData): unknown {
    const obj: any = {};
    if (message.quote !== undefined) {
      obj.quote = Quote.toJSON(message.quote);
    }
    if (message.escrowAddress !== undefined) {
      obj.escrow_address = Address.toJSON(message.escrowAddress);
    }
    if (message.escrowItemAddress !== undefined) {
      obj.escrow_item_address = Address.toJSON(message.escrowItemAddress);
    }
    if (message.status !== undefined) {
      obj.status = TradeStatus.toJSON(message.status);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<OrderData>, I>>(base?: I): OrderData {
    return OrderData.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<OrderData>, I>>(
    object: I,
  ): OrderData {
    const message = createBaseOrderData();
    message.quote =
      object.quote !== undefined && object.quote !== null
        ? Quote.fromPartial(object.quote)
        : undefined;
    message.escrowAddress =
      object.escrowAddress !== undefined && object.escrowAddress !== null
        ? Address.fromPartial(object.escrowAddress)
        : undefined;
    message.escrowItemAddress =
      object.escrowItemAddress !== undefined &&
      object.escrowItemAddress !== null
        ? Address.fromPartial(object.escrowItemAddress)
        : undefined;
    message.status =
      object.status !== undefined && object.status !== null
        ? TradeStatus.fromPartial(object.status)
        : undefined;
    return message;
  },
};

type Builtin =
  | Date
  | Function
  | Uint8Array
  | string
  | number
  | boolean
  | undefined;

export type DeepPartial<T> = T extends Builtin
  ? T
  : T extends globalThis.Array<infer U>
    ? globalThis.Array<DeepPartial<U>>
    : T extends ReadonlyArray<infer U>
      ? ReadonlyArray<DeepPartial<U>>
      : T extends {}
        ? { [K in keyof T]?: DeepPartial<T[K]> }
        : Partial<T>;

type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin
  ? P
  : P & { [K in keyof P]: Exact<P[K], I[K]> } & {
      [K in Exclude<keyof I, KeysOfUnion<P>>]: never;
    };

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}
